{
    "id": 6,
    "position": 1,
    "name": "network_dashboard",
    "title": "Network Dashboard",
    "active": true,
    "periods": [{
        "label": "Yesterday",
        "value": "yesterday"
    }, {
        "label": "7 Days",
        "value": "7days"
    }, {
        "label": "MTD",
        "value": "month_to_date"
    }, {
        "label": "Last Month",
        "value": "last_month"
    }, {
        "label": "QTD",
        "value": "quarter_to_date"
    }],
    "columns_count": 4,
    "type": "NETWORK",
    "widgets": [{
        "id": 81,
        "dashboard_id": 6,
        "size_x": 1,
        "size_y": 1,
        "row": 0,
        "col": 0,
        "code": "<pre id=\"csv_81\" style=\"display:none\">current,Tue Feb 21 2017 00:00:00 GMT-0800 (PST),259492\ndetails,Tue Feb 21 2017 00:00:00 GMT-0800 (PST),259492\nprior,Mon Feb 20 2017 00:00:00 GMT-0800 (PST),243893</pre>\n<div>\n  <div class=\"metrics\">\n    <div class=\"metrics-body\">\n      <div class=\"metrics-title\">\n        <span>Impressions Sold</span>\n      </div>\n      <div class=\"metrics-value\">\n        <span id=\"metric_value_81\"></span>\n      </div>\n      <div id=\"sparkline_81\" range=\"item.code.current.dates\" data-format=\"bigNumber\" sparkline=\"item.code.current.series\"></div>\n    </div>\n    <div class=\"metrics-rate\">\n      <span class=\"caption\">Change from prior period<br>value of <span id=\"prior_value_81\"></span></span>\n      <span id=\"delta_81\" class=\"delta\">\n        <span id=\"delta_value_81\"></span>%\n        <span id=\"delta_icon_81\" class=\"icon arrow-up\"></span>\n      </span>\n    </div>\n  </div>\n</div>\n<pre id=\"csv_81\" style=\"display:none\">current,Tue Feb 21 2017 00:00:00 GMT-0800 (PST),259492\ndetails,Tue Feb 21 2017 00:00:00 GMT-0800 (PST),259492\nprior,Mon Feb 20 2017 00:00:00 GMT-0800 (PST),243893</pre>\n<script>\n  var numberFormatter = {\n    currency: function(n) {\n      var numberParts = n.toFixed(2).split(\".\");\n      numberParts[0] = numberParts[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n      return \"$\" + numberParts[0] + \".\" + numberParts[1];\n    },\n\n    bigNumber: function(n) {\n      return n.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n    },\n\n    milliseconds: function(n) {\n      return parseInt(n).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\") + \" ms\"\n    },\n\n    float: function(n) {\n      return n.toFixed(2);\n    },\n\n    percentage: function(n) {\n      return (n * 100).toFixed(2) + \"%\";\n    }\n  };\n\n  function createSparkline(element, data, range, numberFormat) {\n    var categories = (range && range.days) ? range.days.map(function(d) { return moment(d).format(\"YYYY-MM-DD\"); }) : []\n    var options = {\n      chart: {\n        backgroundColor: null,\n        renderTo: element,\n        borderWidth: 0,\n        spacingBottom: 0,\n        spacingTop: 0,\n        spacingLeft: 0,\n        spacingRight: 0,\n        skipClone: true\n      },\n      title: null,\n      credits: {\n        enabled: false\n      },\n      xAxis: {\n        labels: {\n          enabled: false\n        },\n        categories: categories,\n        title: {\n          text: null\n        },\n        lineWidth: 0,\n        startOnTick: false,\n        endOnTick: false,\n        tickPositions: []\n      },\n      yAxis: {\n        labels: {\n          enabled: false\n        },\n        title: {\n          text: null\n        },\n        startOnTick: false,\n        endOnTick: false,\n        tickPositions: []\n      },\n      legend: {\n        enabled: false\n      },\n      tooltip: {\n        enabled: true,\n        backgroundColor: null,\n        borderWidth: 0,\n        shadow: false,\n        useHTML: true,\n        formatter: function() {\n          return \"<span>\" + this.x + \"</span><br />\" + numberFormat(this.y);\n        },\n        style: {\n          padding: 0\n        }\n      },\n      plotOptions: {\n        series: {\n          lineWidth: 2,\n          color: \"#fff\",\n          shadow: false,\n          states: {\n            hover: {\n              lineWidth: 2\n            }\n          },\n          marker: {\n            radius: 0,\n            states: {\n              hover: {\n                radius: 5,\n                fillColor: \"#fd9903\"\n              }\n            }\n          }\n        }\n      },\n      series: [{\n        data: data,\n      }],\n    };\n    return new Highcharts.Chart(options);\n  };\n\n  (function(csv) {\n    var series = [], range = {days:[]}, current = 0, prior = 0;\n    var formater = numberFormatter.bigNumber;\n    var lines = csv.split(\"\\n\");\n    $.each(lines, function(lineNo,line) {\n      if (line != \"\") {\n        var items = line.split(\",\");\n        if (items[0] == \"current\") {\n          current = parseFloat(items[2]);\n          $(\"#metric_value_81\").html(formater(current));\n        } else if (items[0] == \"prior\") {\n          prior = parseFloat(items[2]);\n          $(\"#prior_value_81\").html(formater(prior));\n          $(\"#prior_value_81\").html(formater(prior));\n        } else {\n          series.push(parseFloat(items[2]));\n          range.days.push(Date.parse(items[1]));\n        }\n      }\n    });\n    $(\"#delta_value_81\").html((100*(current/prior)-100).toFixed(0));\n    if (prior > current) {\n      $(\"#delta_81\").addClass(\"down\");\n      $(\"#delta_icon_81\").removeClass(\"arrow-up\").addClass(\"arrow-down\");\n    } else {\n      $(\"#delta_81\").removeClass(\"down\");\n      $(\"#delta_icon_81\").removeClass(\"arrow-down\").addClass(\"arrow-up\");\n    }\n    if((_.last(range.days) - _.first(range.days)) > moment.duration(1, \"day\").asMilliseconds()){\n      createSparkline($(\"#sparkline_81\").get(0), series, range, formater);\n    }\n  })($(\"#csv_81\").html());\n</script>",
        "type": "static_html",
        "chart_options": null,
        "chart_theme": null,
        "title": "Impressions Sold",
        "number_format": "bigNumber",
        "duration": "{\"hours\": 1}",
        "data_source_type": "sql",
        "data_source": "dw_sw",
        "cache_id": null,
        "template_id": 1,
        "theme_id": null,
        "theme": null,
        "template": {
            "id": 1,
            "name": "number_squares_with_deltas",
            "code": "<pre id=\"csv_{{widget_id}}\" style=\"display:none\">{{data_csv}}</pre>\n<div>\n  <div class=\"metrics\">\n    <div class=\"metrics-body\">\n      <div class=\"metrics-title\">\n        <span>{{title}}</span>\n      </div>\n      <div class=\"metrics-value\">\n        <span id=\"metric_value_{{widget_id}}\"></span>\n      </div>\n      <div id=\"sparkline_{{widget_id}}\" range=\"item.code.current.dates\" data-format=\"bigNumber\" sparkline=\"item.code.current.series\"></div>\n    </div>\n    <div class=\"metrics-rate\">\n      <span class=\"caption\">Change from prior period<br>value of <span id=\"prior_value_{{widget_id}}\"></span></span>\n      <span id=\"delta_{{widget_id}}\" class=\"delta\">\n        <span id=\"delta_value_{{widget_id}}\"></span>%\n        <span id=\"delta_icon_{{widget_id}}\" class=\"icon arrow-up\"></span>\n      </span>\n    </div>\n  </div>\n</div>\n<pre id=\"csv_{{widget_id}}\" style=\"display:none\">{{data_csv}}</pre>\n<script>\n  var numberFormatter = {\n    currency: function(n) {\n      var numberParts = n.toFixed(2).split(\".\");\n      numberParts[0] = numberParts[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n      return \"$\" + numberParts[0] + \".\" + numberParts[1];\n    },\n\n    bigNumber: function(n) {\n      return n.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n    },\n\n    milliseconds: function(n) {\n      return parseInt(n).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\") + \" ms\"\n    },\n\n    float: function(n) {\n      return n.toFixed(2);\n    },\n\n    percentage: function(n) {\n      return (n * 100).toFixed(2) + \"%\";\n    }\n  };\n\n  function createSparkline(element, data, range, numberFormat) {\n    var categories = (range && range.days) ? range.days.map(function(d) { return moment(d).format(\"YYYY-MM-DD\"); }) : []\n    var options = {\n      chart: {\n        backgroundColor: null,\n        renderTo: element,\n        borderWidth: 0,\n        spacingBottom: 0,\n        spacingTop: 0,\n        spacingLeft: 0,\n        spacingRight: 0,\n        skipClone: true\n      },\n      title: null,\n      credits: {\n        enabled: false\n      },\n      xAxis: {\n        labels: {\n          enabled: false\n        },\n        categories: categories,\n        title: {\n          text: null\n        },\n        lineWidth: 0,\n        startOnTick: false,\n        endOnTick: false,\n        tickPositions: []\n      },\n      yAxis: {\n        labels: {\n          enabled: false\n        },\n        title: {\n          text: null\n        },\n        startOnTick: false,\n        endOnTick: false,\n        tickPositions: []\n      },\n      legend: {\n        enabled: false\n      },\n      tooltip: {\n        enabled: true,\n        backgroundColor: null,\n        borderWidth: 0,\n        shadow: false,\n        useHTML: true,\n        formatter: function() {\n          return \"<span>\" + this.x + \"</span><br />\" + numberFormat(this.y);\n        },\n        style: {\n          padding: 0\n        }\n      },\n      plotOptions: {\n        series: {\n          lineWidth: 2,\n          color: \"#fff\",\n          shadow: false,\n          states: {\n            hover: {\n              lineWidth: 2\n            }\n          },\n          marker: {\n            radius: 0,\n            states: {\n              hover: {\n                radius: 5,\n                fillColor: \"#fd9903\"\n              }\n            }\n          }\n        }\n      },\n      series: [{\n        data: data,\n      }],\n    };\n    return new Highcharts.Chart(options);\n  };\n\n  (function(csv) {\n    var series = [], range = {days:[]}, current = 0, prior = 0;\n    var formater = numberFormatter.{{number_format}};\n    var lines = csv.split(\"\\n\");\n    $.each(lines, function(lineNo,line) {\n      if (line != \"\") {\n        var items = line.split(\",\");\n        if (items[0] == \"current\") {\n          current = parseFloat(items[2]);\n          $(\"#metric_value_{{widget_id}}\").html(formater(current));\n        } else if (items[0] == \"prior\") {\n          prior = parseFloat(items[2]);\n          $(\"#prior_value_{{widget_id}}\").html(formater(prior));\n          $(\"#prior_value_{{widget_id}}\").html(formater(prior));\n        } else {\n          series.push(parseFloat(items[2]));\n          range.days.push(Date.parse(items[1]));\n        }\n      }\n    });\n    $(\"#delta_value_{{widget_id}}\").html((100*(current/prior)-100).toFixed(0));\n    if (prior > current) {\n      $(\"#delta_{{widget_id}}\").addClass(\"down\");\n      $(\"#delta_icon_{{widget_id}}\").removeClass(\"arrow-up\").addClass(\"arrow-down\");\n    } else {\n      $(\"#delta_{{widget_id}}\").removeClass(\"down\");\n      $(\"#delta_icon_{{widget_id}}\").removeClass(\"arrow-down\").addClass(\"arrow-up\");\n    }\n    if((_.last(range.days) - _.first(range.days)) > moment.duration(1, \"day\").asMilliseconds()){\n      createSparkline($(\"#sparkline_{{widget_id}}\").get(0), series, range, formater);\n    }\n  })($(\"#csv_{{widget_id}}\").html());\n</script>"
        }
    }, {
        "id": 82,
        "dashboard_id": 6,
        "size_x": 1,
        "size_y": 1,
        "row": 0,
        "col": 1,
        "code": "<pre id=\"csv_82\" style=\"display:none\">current,Tue Feb 21 2017 00:00:00 GMT-0800 (PST),0.1247\ndetails,Tue Feb 21 2017 00:00:00 GMT-0800 (PST),0.1247\nprior,Mon Feb 20 2017 00:00:00 GMT-0800 (PST),0.1226</pre>\n<div>\n  <div class=\"metrics\">\n    <div class=\"metrics-body\">\n      <div class=\"metrics-title\">\n        <span>Fill Rate</span>\n      </div>\n      <div class=\"metrics-value\">\n        <span id=\"metric_value_82\"></span>\n      </div>\n      <div id=\"sparkline_82\" range=\"item.code.current.dates\" data-format=\"bigNumber\" sparkline=\"item.code.current.series\"></div>\n    </div>\n    <div class=\"metrics-rate\">\n      <span class=\"caption\">Change from prior period<br>value of <span id=\"prior_value_82\"></span></span>\n      <span id=\"delta_82\" class=\"delta\">\n        <span id=\"delta_value_82\"></span>%\n        <span id=\"delta_icon_82\" class=\"icon arrow-up\"></span>\n      </span>\n    </div>\n  </div>\n</div>\n<pre id=\"csv_82\" style=\"display:none\">current,Tue Feb 21 2017 00:00:00 GMT-0800 (PST),0.1247\ndetails,Tue Feb 21 2017 00:00:00 GMT-0800 (PST),0.1247\nprior,Mon Feb 20 2017 00:00:00 GMT-0800 (PST),0.1226</pre>\n<script>\n  var numberFormatter = {\n    currency: function(n) {\n      var numberParts = n.toFixed(2).split(\".\");\n      numberParts[0] = numberParts[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n      return \"$\" + numberParts[0] + \".\" + numberParts[1];\n    },\n\n    bigNumber: function(n) {\n      return n.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n    },\n\n    milliseconds: function(n) {\n      return parseInt(n).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\") + \" ms\"\n    },\n\n    float: function(n) {\n      return n.toFixed(2);\n    },\n\n    percentage: function(n) {\n      return (n * 100).toFixed(2) + \"%\";\n    }\n  };\n\n  function createSparkline(element, data, range, numberFormat) {\n    var categories = (range && range.days) ? range.days.map(function(d) { return moment(d).format(\"YYYY-MM-DD\"); }) : []\n    var options = {\n      chart: {\n        backgroundColor: null,\n        renderTo: element,\n        borderWidth: 0,\n        spacingBottom: 0,\n        spacingTop: 0,\n        spacingLeft: 0,\n        spacingRight: 0,\n        skipClone: true\n      },\n      title: null,\n      credits: {\n        enabled: false\n      },\n      xAxis: {\n        labels: {\n          enabled: false\n        },\n        categories: categories,\n        title: {\n          text: null\n        },\n        lineWidth: 0,\n        startOnTick: false,\n        endOnTick: false,\n        tickPositions: []\n      },\n      yAxis: {\n        labels: {\n          enabled: false\n        },\n        title: {\n          text: null\n        },\n        startOnTick: false,\n        endOnTick: false,\n        tickPositions: []\n      },\n      legend: {\n        enabled: false\n      },\n      tooltip: {\n        enabled: true,\n        backgroundColor: null,\n        borderWidth: 0,\n        shadow: false,\n        useHTML: true,\n        formatter: function() {\n          return \"<span>\" + this.x + \"</span><br />\" + numberFormat(this.y);\n        },\n        style: {\n          padding: 0\n        }\n      },\n      plotOptions: {\n        series: {\n          lineWidth: 2,\n          color: \"#fff\",\n          shadow: false,\n          states: {\n            hover: {\n              lineWidth: 2\n            }\n          },\n          marker: {\n            radius: 0,\n            states: {\n              hover: {\n                radius: 5,\n                fillColor: \"#fd9903\"\n              }\n            }\n          }\n        }\n      },\n      series: [{\n        data: data,\n      }],\n    };\n    return new Highcharts.Chart(options);\n  };\n\n  (function(csv) {\n    var series = [], range = {days:[]}, current = 0, prior = 0;\n    var formater = numberFormatter.percentage;\n    var lines = csv.split(\"\\n\");\n    $.each(lines, function(lineNo,line) {\n      if (line != \"\") {\n        var items = line.split(\",\");\n        if (items[0] == \"current\") {\n          current = parseFloat(items[2]);\n          $(\"#metric_value_82\").html(formater(current));\n        } else if (items[0] == \"prior\") {\n          prior = parseFloat(items[2]);\n          $(\"#prior_value_82\").html(formater(prior));\n          $(\"#prior_value_82\").html(formater(prior));\n        } else {\n          series.push(parseFloat(items[2]));\n          range.days.push(Date.parse(items[1]));\n        }\n      }\n    });\n    $(\"#delta_value_82\").html((100*(current/prior)-100).toFixed(0));\n    if (prior > current) {\n      $(\"#delta_82\").addClass(\"down\");\n      $(\"#delta_icon_82\").removeClass(\"arrow-up\").addClass(\"arrow-down\");\n    } else {\n      $(\"#delta_82\").removeClass(\"down\");\n      $(\"#delta_icon_82\").removeClass(\"arrow-down\").addClass(\"arrow-up\");\n    }\n    if((_.last(range.days) - _.first(range.days)) > moment.duration(1, \"day\").asMilliseconds()){\n      createSparkline($(\"#sparkline_82\").get(0), series, range, formater);\n    }\n  })($(\"#csv_82\").html());\n</script>",
        "type": "static_html",
        "chart_options": null,
        "chart_theme": null,
        "title": "Fill Rate",
        "number_format": "percentage",
        "duration": "{\"hours\": 1}",
        "data_source_type": "sql",
        "data_source": "dw_sw",
        "cache_id": null,
        "template_id": 1,
        "theme_id": null,
        "theme": null,
        "template": {
            "id": 1,
            "name": "number_squares_with_deltas",
            "code": "<pre id=\"csv_{{widget_id}}\" style=\"display:none\">{{data_csv}}</pre>\n<div>\n  <div class=\"metrics\">\n    <div class=\"metrics-body\">\n      <div class=\"metrics-title\">\n        <span>{{title}}</span>\n      </div>\n      <div class=\"metrics-value\">\n        <span id=\"metric_value_{{widget_id}}\"></span>\n      </div>\n      <div id=\"sparkline_{{widget_id}}\" range=\"item.code.current.dates\" data-format=\"bigNumber\" sparkline=\"item.code.current.series\"></div>\n    </div>\n    <div class=\"metrics-rate\">\n      <span class=\"caption\">Change from prior period<br>value of <span id=\"prior_value_{{widget_id}}\"></span></span>\n      <span id=\"delta_{{widget_id}}\" class=\"delta\">\n        <span id=\"delta_value_{{widget_id}}\"></span>%\n        <span id=\"delta_icon_{{widget_id}}\" class=\"icon arrow-up\"></span>\n      </span>\n    </div>\n  </div>\n</div>\n<pre id=\"csv_{{widget_id}}\" style=\"display:none\">{{data_csv}}</pre>\n<script>\n  var numberFormatter = {\n    currency: function(n) {\n      var numberParts = n.toFixed(2).split(\".\");\n      numberParts[0] = numberParts[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n      return \"$\" + numberParts[0] + \".\" + numberParts[1];\n    },\n\n    bigNumber: function(n) {\n      return n.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n    },\n\n    milliseconds: function(n) {\n      return parseInt(n).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\") + \" ms\"\n    },\n\n    float: function(n) {\n      return n.toFixed(2);\n    },\n\n    percentage: function(n) {\n      return (n * 100).toFixed(2) + \"%\";\n    }\n  };\n\n  function createSparkline(element, data, range, numberFormat) {\n    var categories = (range && range.days) ? range.days.map(function(d) { return moment(d).format(\"YYYY-MM-DD\"); }) : []\n    var options = {\n      chart: {\n        backgroundColor: null,\n        renderTo: element,\n        borderWidth: 0,\n        spacingBottom: 0,\n        spacingTop: 0,\n        spacingLeft: 0,\n        spacingRight: 0,\n        skipClone: true\n      },\n      title: null,\n      credits: {\n        enabled: false\n      },\n      xAxis: {\n        labels: {\n          enabled: false\n        },\n        categories: categories,\n        title: {\n          text: null\n        },\n        lineWidth: 0,\n        startOnTick: false,\n        endOnTick: false,\n        tickPositions: []\n      },\n      yAxis: {\n        labels: {\n          enabled: false\n        },\n        title: {\n          text: null\n        },\n        startOnTick: false,\n        endOnTick: false,\n        tickPositions: []\n      },\n      legend: {\n        enabled: false\n      },\n      tooltip: {\n        enabled: true,\n        backgroundColor: null,\n        borderWidth: 0,\n        shadow: false,\n        useHTML: true,\n        formatter: function() {\n          return \"<span>\" + this.x + \"</span><br />\" + numberFormat(this.y);\n        },\n        style: {\n          padding: 0\n        }\n      },\n      plotOptions: {\n        series: {\n          lineWidth: 2,\n          color: \"#fff\",\n          shadow: false,\n          states: {\n            hover: {\n              lineWidth: 2\n            }\n          },\n          marker: {\n            radius: 0,\n            states: {\n              hover: {\n                radius: 5,\n                fillColor: \"#fd9903\"\n              }\n            }\n          }\n        }\n      },\n      series: [{\n        data: data,\n      }],\n    };\n    return new Highcharts.Chart(options);\n  };\n\n  (function(csv) {\n    var series = [], range = {days:[]}, current = 0, prior = 0;\n    var formater = numberFormatter.{{number_format}};\n    var lines = csv.split(\"\\n\");\n    $.each(lines, function(lineNo,line) {\n      if (line != \"\") {\n        var items = line.split(\",\");\n        if (items[0] == \"current\") {\n          current = parseFloat(items[2]);\n          $(\"#metric_value_{{widget_id}}\").html(formater(current));\n        } else if (items[0] == \"prior\") {\n          prior = parseFloat(items[2]);\n          $(\"#prior_value_{{widget_id}}\").html(formater(prior));\n          $(\"#prior_value_{{widget_id}}\").html(formater(prior));\n        } else {\n          series.push(parseFloat(items[2]));\n          range.days.push(Date.parse(items[1]));\n        }\n      }\n    });\n    $(\"#delta_value_{{widget_id}}\").html((100*(current/prior)-100).toFixed(0));\n    if (prior > current) {\n      $(\"#delta_{{widget_id}}\").addClass(\"down\");\n      $(\"#delta_icon_{{widget_id}}\").removeClass(\"arrow-up\").addClass(\"arrow-down\");\n    } else {\n      $(\"#delta_{{widget_id}}\").removeClass(\"down\");\n      $(\"#delta_icon_{{widget_id}}\").removeClass(\"arrow-down\").addClass(\"arrow-up\");\n    }\n    if((_.last(range.days) - _.first(range.days)) > moment.duration(1, \"day\").asMilliseconds()){\n      createSparkline($(\"#sparkline_{{widget_id}}\").get(0), series, range, formater);\n    }\n  })($(\"#csv_{{widget_id}}\").html());\n</script>"
        }
    }, {
        "id": 83,
        "dashboard_id": 6,
        "size_x": 1,
        "size_y": 1,
        "row": 0,
        "col": 2,
        "code": "<pre id=\"csv_83\" style=\"display:none\">current,Tue Feb 21 2017 00:00:00 GMT-0800 (PST),124.29183\ndetails,Tue Feb 21 2017 00:00:00 GMT-0800 (PST),124.29183\nprior,Mon Feb 20 2017 00:00:00 GMT-0800 (PST),121.97877</pre>\n<div>\n  <div class=\"metrics\">\n    <div class=\"metrics-body\">\n      <div class=\"metrics-title\">\n        <span>Revenue</span>\n      </div>\n      <div class=\"metrics-value\">\n        <span id=\"metric_value_83\"></span>\n      </div>\n      <div id=\"sparkline_83\" range=\"item.code.current.dates\" data-format=\"bigNumber\" sparkline=\"item.code.current.series\"></div>\n    </div>\n    <div class=\"metrics-rate\">\n      <span class=\"caption\">Change from prior period<br>value of <span id=\"prior_value_83\"></span></span>\n      <span id=\"delta_83\" class=\"delta\">\n        <span id=\"delta_value_83\"></span>%\n        <span id=\"delta_icon_83\" class=\"icon arrow-up\"></span>\n      </span>\n    </div>\n  </div>\n</div>\n<pre id=\"csv_83\" style=\"display:none\">current,Tue Feb 21 2017 00:00:00 GMT-0800 (PST),124.29183\ndetails,Tue Feb 21 2017 00:00:00 GMT-0800 (PST),124.29183\nprior,Mon Feb 20 2017 00:00:00 GMT-0800 (PST),121.97877</pre>\n<script>\n  var numberFormatter = {\n    currency: function(n) {\n      var numberParts = n.toFixed(2).split(\".\");\n      numberParts[0] = numberParts[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n      return \"$\" + numberParts[0] + \".\" + numberParts[1];\n    },\n\n    bigNumber: function(n) {\n      return n.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n    },\n\n    milliseconds: function(n) {\n      return parseInt(n).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\") + \" ms\"\n    },\n\n    float: function(n) {\n      return n.toFixed(2);\n    },\n\n    percentage: function(n) {\n      return (n * 100).toFixed(2) + \"%\";\n    }\n  };\n\n  function createSparkline(element, data, range, numberFormat) {\n    var categories = (range && range.days) ? range.days.map(function(d) { return moment(d).format(\"YYYY-MM-DD\"); }) : []\n    var options = {\n      chart: {\n        backgroundColor: null,\n        renderTo: element,\n        borderWidth: 0,\n        spacingBottom: 0,\n        spacingTop: 0,\n        spacingLeft: 0,\n        spacingRight: 0,\n        skipClone: true\n      },\n      title: null,\n      credits: {\n        enabled: false\n      },\n      xAxis: {\n        labels: {\n          enabled: false\n        },\n        categories: categories,\n        title: {\n          text: null\n        },\n        lineWidth: 0,\n        startOnTick: false,\n        endOnTick: false,\n        tickPositions: []\n      },\n      yAxis: {\n        labels: {\n          enabled: false\n        },\n        title: {\n          text: null\n        },\n        startOnTick: false,\n        endOnTick: false,\n        tickPositions: []\n      },\n      legend: {\n        enabled: false\n      },\n      tooltip: {\n        enabled: true,\n        backgroundColor: null,\n        borderWidth: 0,\n        shadow: false,\n        useHTML: true,\n        formatter: function() {\n          return \"<span>\" + this.x + \"</span><br />\" + numberFormat(this.y);\n        },\n        style: {\n          padding: 0\n        }\n      },\n      plotOptions: {\n        series: {\n          lineWidth: 2,\n          color: \"#fff\",\n          shadow: false,\n          states: {\n            hover: {\n              lineWidth: 2\n            }\n          },\n          marker: {\n            radius: 0,\n            states: {\n              hover: {\n                radius: 5,\n                fillColor: \"#fd9903\"\n              }\n            }\n          }\n        }\n      },\n      series: [{\n        data: data,\n      }],\n    };\n    return new Highcharts.Chart(options);\n  };\n\n  (function(csv) {\n    var series = [], range = {days:[]}, current = 0, prior = 0;\n    var formater = numberFormatter.currency;\n    var lines = csv.split(\"\\n\");\n    $.each(lines, function(lineNo,line) {\n      if (line != \"\") {\n        var items = line.split(\",\");\n        if (items[0] == \"current\") {\n          current = parseFloat(items[2]);\n          $(\"#metric_value_83\").html(formater(current));\n        } else if (items[0] == \"prior\") {\n          prior = parseFloat(items[2]);\n          $(\"#prior_value_83\").html(formater(prior));\n          $(\"#prior_value_83\").html(formater(prior));\n        } else {\n          series.push(parseFloat(items[2]));\n          range.days.push(Date.parse(items[1]));\n        }\n      }\n    });\n    $(\"#delta_value_83\").html((100*(current/prior)-100).toFixed(0));\n    if (prior > current) {\n      $(\"#delta_83\").addClass(\"down\");\n      $(\"#delta_icon_83\").removeClass(\"arrow-up\").addClass(\"arrow-down\");\n    } else {\n      $(\"#delta_83\").removeClass(\"down\");\n      $(\"#delta_icon_83\").removeClass(\"arrow-down\").addClass(\"arrow-up\");\n    }\n    if((_.last(range.days) - _.first(range.days)) > moment.duration(1, \"day\").asMilliseconds()){\n      createSparkline($(\"#sparkline_83\").get(0), series, range, formater);\n    }\n  })($(\"#csv_83\").html());\n</script>",
        "type": "static_html",
        "chart_options": null,
        "chart_theme": null,
        "title": "Revenue",
        "number_format": "currency",
        "duration": "{\"hours\": 1}",
        "data_source_type": "sql",
        "data_source": "dw_sw",
        "cache_id": null,
        "template_id": 1,
        "theme_id": null,
        "theme": null,
        "template": {
            "id": 1,
            "name": "number_squares_with_deltas",
            "code": "<pre id=\"csv_{{widget_id}}\" style=\"display:none\">{{data_csv}}</pre>\n<div>\n  <div class=\"metrics\">\n    <div class=\"metrics-body\">\n      <div class=\"metrics-title\">\n        <span>{{title}}</span>\n      </div>\n      <div class=\"metrics-value\">\n        <span id=\"metric_value_{{widget_id}}\"></span>\n      </div>\n      <div id=\"sparkline_{{widget_id}}\" range=\"item.code.current.dates\" data-format=\"bigNumber\" sparkline=\"item.code.current.series\"></div>\n    </div>\n    <div class=\"metrics-rate\">\n      <span class=\"caption\">Change from prior period<br>value of <span id=\"prior_value_{{widget_id}}\"></span></span>\n      <span id=\"delta_{{widget_id}}\" class=\"delta\">\n        <span id=\"delta_value_{{widget_id}}\"></span>%\n        <span id=\"delta_icon_{{widget_id}}\" class=\"icon arrow-up\"></span>\n      </span>\n    </div>\n  </div>\n</div>\n<pre id=\"csv_{{widget_id}}\" style=\"display:none\">{{data_csv}}</pre>\n<script>\n  var numberFormatter = {\n    currency: function(n) {\n      var numberParts = n.toFixed(2).split(\".\");\n      numberParts[0] = numberParts[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n      return \"$\" + numberParts[0] + \".\" + numberParts[1];\n    },\n\n    bigNumber: function(n) {\n      return n.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n    },\n\n    milliseconds: function(n) {\n      return parseInt(n).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\") + \" ms\"\n    },\n\n    float: function(n) {\n      return n.toFixed(2);\n    },\n\n    percentage: function(n) {\n      return (n * 100).toFixed(2) + \"%\";\n    }\n  };\n\n  function createSparkline(element, data, range, numberFormat) {\n    var categories = (range && range.days) ? range.days.map(function(d) { return moment(d).format(\"YYYY-MM-DD\"); }) : []\n    var options = {\n      chart: {\n        backgroundColor: null,\n        renderTo: element,\n        borderWidth: 0,\n        spacingBottom: 0,\n        spacingTop: 0,\n        spacingLeft: 0,\n        spacingRight: 0,\n        skipClone: true\n      },\n      title: null,\n      credits: {\n        enabled: false\n      },\n      xAxis: {\n        labels: {\n          enabled: false\n        },\n        categories: categories,\n        title: {\n          text: null\n        },\n        lineWidth: 0,\n        startOnTick: false,\n        endOnTick: false,\n        tickPositions: []\n      },\n      yAxis: {\n        labels: {\n          enabled: false\n        },\n        title: {\n          text: null\n        },\n        startOnTick: false,\n        endOnTick: false,\n        tickPositions: []\n      },\n      legend: {\n        enabled: false\n      },\n      tooltip: {\n        enabled: true,\n        backgroundColor: null,\n        borderWidth: 0,\n        shadow: false,\n        useHTML: true,\n        formatter: function() {\n          return \"<span>\" + this.x + \"</span><br />\" + numberFormat(this.y);\n        },\n        style: {\n          padding: 0\n        }\n      },\n      plotOptions: {\n        series: {\n          lineWidth: 2,\n          color: \"#fff\",\n          shadow: false,\n          states: {\n            hover: {\n              lineWidth: 2\n            }\n          },\n          marker: {\n            radius: 0,\n            states: {\n              hover: {\n                radius: 5,\n                fillColor: \"#fd9903\"\n              }\n            }\n          }\n        }\n      },\n      series: [{\n        data: data,\n      }],\n    };\n    return new Highcharts.Chart(options);\n  };\n\n  (function(csv) {\n    var series = [], range = {days:[]}, current = 0, prior = 0;\n    var formater = numberFormatter.{{number_format}};\n    var lines = csv.split(\"\\n\");\n    $.each(lines, function(lineNo,line) {\n      if (line != \"\") {\n        var items = line.split(\",\");\n        if (items[0] == \"current\") {\n          current = parseFloat(items[2]);\n          $(\"#metric_value_{{widget_id}}\").html(formater(current));\n        } else if (items[0] == \"prior\") {\n          prior = parseFloat(items[2]);\n          $(\"#prior_value_{{widget_id}}\").html(formater(prior));\n          $(\"#prior_value_{{widget_id}}\").html(formater(prior));\n        } else {\n          series.push(parseFloat(items[2]));\n          range.days.push(Date.parse(items[1]));\n        }\n      }\n    });\n    $(\"#delta_value_{{widget_id}}\").html((100*(current/prior)-100).toFixed(0));\n    if (prior > current) {\n      $(\"#delta_{{widget_id}}\").addClass(\"down\");\n      $(\"#delta_icon_{{widget_id}}\").removeClass(\"arrow-up\").addClass(\"arrow-down\");\n    } else {\n      $(\"#delta_{{widget_id}}\").removeClass(\"down\");\n      $(\"#delta_icon_{{widget_id}}\").removeClass(\"arrow-down\").addClass(\"arrow-up\");\n    }\n    if((_.last(range.days) - _.first(range.days)) > moment.duration(1, \"day\").asMilliseconds()){\n      createSparkline($(\"#sparkline_{{widget_id}}\").get(0), series, range, formater);\n    }\n  })($(\"#csv_{{widget_id}}\").html());\n</script>"
        }
    }, {
        "id": 84,
        "dashboard_id": 6,
        "size_x": 1,
        "size_y": 1,
        "row": 0,
        "col": 3,
        "code": "<pre id=\"csv_84\" style=\"display:none\">current,Tue Feb 21 2017 00:00:00 GMT-0800 (PST),0.4789813559\ndetails,Tue Feb 21 2017 00:00:00 GMT-0800 (PST),0.4789813559\nprior,Mon Feb 20 2017 00:00:00 GMT-0800 (PST),0.5001323121</pre>\n<div>\n  <div class=\"metrics\">\n    <div class=\"metrics-body\">\n      <div class=\"metrics-title\">\n        <span>CPM</span>\n      </div>\n      <div class=\"metrics-value\">\n        <span id=\"metric_value_84\"></span>\n      </div>\n      <div id=\"sparkline_84\" range=\"item.code.current.dates\" data-format=\"bigNumber\" sparkline=\"item.code.current.series\"></div>\n    </div>\n    <div class=\"metrics-rate\">\n      <span class=\"caption\">Change from prior period<br>value of <span id=\"prior_value_84\"></span></span>\n      <span id=\"delta_84\" class=\"delta\">\n        <span id=\"delta_value_84\"></span>%\n        <span id=\"delta_icon_84\" class=\"icon arrow-up\"></span>\n      </span>\n    </div>\n  </div>\n</div>\n<pre id=\"csv_84\" style=\"display:none\">current,Tue Feb 21 2017 00:00:00 GMT-0800 (PST),0.4789813559\ndetails,Tue Feb 21 2017 00:00:00 GMT-0800 (PST),0.4789813559\nprior,Mon Feb 20 2017 00:00:00 GMT-0800 (PST),0.5001323121</pre>\n<script>\n  var numberFormatter = {\n    currency: function(n) {\n      var numberParts = n.toFixed(2).split(\".\");\n      numberParts[0] = numberParts[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n      return \"$\" + numberParts[0] + \".\" + numberParts[1];\n    },\n\n    bigNumber: function(n) {\n      return n.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n    },\n\n    milliseconds: function(n) {\n      return parseInt(n).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\") + \" ms\"\n    },\n\n    float: function(n) {\n      return n.toFixed(2);\n    },\n\n    percentage: function(n) {\n      return (n * 100).toFixed(2) + \"%\";\n    }\n  };\n\n  function createSparkline(element, data, range, numberFormat) {\n    var categories = (range && range.days) ? range.days.map(function(d) { return moment(d).format(\"YYYY-MM-DD\"); }) : []\n    var options = {\n      chart: {\n        backgroundColor: null,\n        renderTo: element,\n        borderWidth: 0,\n        spacingBottom: 0,\n        spacingTop: 0,\n        spacingLeft: 0,\n        spacingRight: 0,\n        skipClone: true\n      },\n      title: null,\n      credits: {\n        enabled: false\n      },\n      xAxis: {\n        labels: {\n          enabled: false\n        },\n        categories: categories,\n        title: {\n          text: null\n        },\n        lineWidth: 0,\n        startOnTick: false,\n        endOnTick: false,\n        tickPositions: []\n      },\n      yAxis: {\n        labels: {\n          enabled: false\n        },\n        title: {\n          text: null\n        },\n        startOnTick: false,\n        endOnTick: false,\n        tickPositions: []\n      },\n      legend: {\n        enabled: false\n      },\n      tooltip: {\n        enabled: true,\n        backgroundColor: null,\n        borderWidth: 0,\n        shadow: false,\n        useHTML: true,\n        formatter: function() {\n          return \"<span>\" + this.x + \"</span><br />\" + numberFormat(this.y);\n        },\n        style: {\n          padding: 0\n        }\n      },\n      plotOptions: {\n        series: {\n          lineWidth: 2,\n          color: \"#fff\",\n          shadow: false,\n          states: {\n            hover: {\n              lineWidth: 2\n            }\n          },\n          marker: {\n            radius: 0,\n            states: {\n              hover: {\n                radius: 5,\n                fillColor: \"#fd9903\"\n              }\n            }\n          }\n        }\n      },\n      series: [{\n        data: data,\n      }],\n    };\n    return new Highcharts.Chart(options);\n  };\n\n  (function(csv) {\n    var series = [], range = {days:[]}, current = 0, prior = 0;\n    var formater = numberFormatter.currency;\n    var lines = csv.split(\"\\n\");\n    $.each(lines, function(lineNo,line) {\n      if (line != \"\") {\n        var items = line.split(\",\");\n        if (items[0] == \"current\") {\n          current = parseFloat(items[2]);\n          $(\"#metric_value_84\").html(formater(current));\n        } else if (items[0] == \"prior\") {\n          prior = parseFloat(items[2]);\n          $(\"#prior_value_84\").html(formater(prior));\n          $(\"#prior_value_84\").html(formater(prior));\n        } else {\n          series.push(parseFloat(items[2]));\n          range.days.push(Date.parse(items[1]));\n        }\n      }\n    });\n    $(\"#delta_value_84\").html((100*(current/prior)-100).toFixed(0));\n    if (prior > current) {\n      $(\"#delta_84\").addClass(\"down\");\n      $(\"#delta_icon_84\").removeClass(\"arrow-up\").addClass(\"arrow-down\");\n    } else {\n      $(\"#delta_84\").removeClass(\"down\");\n      $(\"#delta_icon_84\").removeClass(\"arrow-down\").addClass(\"arrow-up\");\n    }\n    if((_.last(range.days) - _.first(range.days)) > moment.duration(1, \"day\").asMilliseconds()){\n      createSparkline($(\"#sparkline_84\").get(0), series, range, formater);\n    }\n  })($(\"#csv_84\").html());\n</script>",
        "type": "static_html",
        "chart_options": null,
        "chart_theme": null,
        "title": "CPM",
        "number_format": "currency",
        "duration": "{\"hours\": 1}",
        "data_source_type": "sql",
        "data_source": "dw_sw",
        "cache_id": null,
        "template_id": 1,
        "theme_id": null,
        "theme": null,
        "template": {
            "id": 1,
            "name": "number_squares_with_deltas",
            "code": "<pre id=\"csv_{{widget_id}}\" style=\"display:none\">{{data_csv}}</pre>\n<div>\n  <div class=\"metrics\">\n    <div class=\"metrics-body\">\n      <div class=\"metrics-title\">\n        <span>{{title}}</span>\n      </div>\n      <div class=\"metrics-value\">\n        <span id=\"metric_value_{{widget_id}}\"></span>\n      </div>\n      <div id=\"sparkline_{{widget_id}}\" range=\"item.code.current.dates\" data-format=\"bigNumber\" sparkline=\"item.code.current.series\"></div>\n    </div>\n    <div class=\"metrics-rate\">\n      <span class=\"caption\">Change from prior period<br>value of <span id=\"prior_value_{{widget_id}}\"></span></span>\n      <span id=\"delta_{{widget_id}}\" class=\"delta\">\n        <span id=\"delta_value_{{widget_id}}\"></span>%\n        <span id=\"delta_icon_{{widget_id}}\" class=\"icon arrow-up\"></span>\n      </span>\n    </div>\n  </div>\n</div>\n<pre id=\"csv_{{widget_id}}\" style=\"display:none\">{{data_csv}}</pre>\n<script>\n  var numberFormatter = {\n    currency: function(n) {\n      var numberParts = n.toFixed(2).split(\".\");\n      numberParts[0] = numberParts[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n      return \"$\" + numberParts[0] + \".\" + numberParts[1];\n    },\n\n    bigNumber: function(n) {\n      return n.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n    },\n\n    milliseconds: function(n) {\n      return parseInt(n).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\") + \" ms\"\n    },\n\n    float: function(n) {\n      return n.toFixed(2);\n    },\n\n    percentage: function(n) {\n      return (n * 100).toFixed(2) + \"%\";\n    }\n  };\n\n  function createSparkline(element, data, range, numberFormat) {\n    var categories = (range && range.days) ? range.days.map(function(d) { return moment(d).format(\"YYYY-MM-DD\"); }) : []\n    var options = {\n      chart: {\n        backgroundColor: null,\n        renderTo: element,\n        borderWidth: 0,\n        spacingBottom: 0,\n        spacingTop: 0,\n        spacingLeft: 0,\n        spacingRight: 0,\n        skipClone: true\n      },\n      title: null,\n      credits: {\n        enabled: false\n      },\n      xAxis: {\n        labels: {\n          enabled: false\n        },\n        categories: categories,\n        title: {\n          text: null\n        },\n        lineWidth: 0,\n        startOnTick: false,\n        endOnTick: false,\n        tickPositions: []\n      },\n      yAxis: {\n        labels: {\n          enabled: false\n        },\n        title: {\n          text: null\n        },\n        startOnTick: false,\n        endOnTick: false,\n        tickPositions: []\n      },\n      legend: {\n        enabled: false\n      },\n      tooltip: {\n        enabled: true,\n        backgroundColor: null,\n        borderWidth: 0,\n        shadow: false,\n        useHTML: true,\n        formatter: function() {\n          return \"<span>\" + this.x + \"</span><br />\" + numberFormat(this.y);\n        },\n        style: {\n          padding: 0\n        }\n      },\n      plotOptions: {\n        series: {\n          lineWidth: 2,\n          color: \"#fff\",\n          shadow: false,\n          states: {\n            hover: {\n              lineWidth: 2\n            }\n          },\n          marker: {\n            radius: 0,\n            states: {\n              hover: {\n                radius: 5,\n                fillColor: \"#fd9903\"\n              }\n            }\n          }\n        }\n      },\n      series: [{\n        data: data,\n      }],\n    };\n    return new Highcharts.Chart(options);\n  };\n\n  (function(csv) {\n    var series = [], range = {days:[]}, current = 0, prior = 0;\n    var formater = numberFormatter.{{number_format}};\n    var lines = csv.split(\"\\n\");\n    $.each(lines, function(lineNo,line) {\n      if (line != \"\") {\n        var items = line.split(\",\");\n        if (items[0] == \"current\") {\n          current = parseFloat(items[2]);\n          $(\"#metric_value_{{widget_id}}\").html(formater(current));\n        } else if (items[0] == \"prior\") {\n          prior = parseFloat(items[2]);\n          $(\"#prior_value_{{widget_id}}\").html(formater(prior));\n          $(\"#prior_value_{{widget_id}}\").html(formater(prior));\n        } else {\n          series.push(parseFloat(items[2]));\n          range.days.push(Date.parse(items[1]));\n        }\n      }\n    });\n    $(\"#delta_value_{{widget_id}}\").html((100*(current/prior)-100).toFixed(0));\n    if (prior > current) {\n      $(\"#delta_{{widget_id}}\").addClass(\"down\");\n      $(\"#delta_icon_{{widget_id}}\").removeClass(\"arrow-up\").addClass(\"arrow-down\");\n    } else {\n      $(\"#delta_{{widget_id}}\").removeClass(\"down\");\n      $(\"#delta_icon_{{widget_id}}\").removeClass(\"arrow-down\").addClass(\"arrow-up\");\n    }\n    if((_.last(range.days) - _.first(range.days)) > moment.duration(1, \"day\").asMilliseconds()){\n      createSparkline($(\"#sparkline_{{widget_id}}\").get(0), series, range, formater);\n    }\n  })($(\"#csv_{{widget_id}}\").html());\n</script>"
        }
    }, {
        "id": 85,
        "dashboard_id": 6,
        "size_x": 2,
        "size_y": 2,
        "row": 1,
        "col": 0,
        "code": "\n<div style=\"background: white\">\n  <div class=\"snapshot-widget-header\">\n    <div class=\"widget-title\">\nTop Websites\n      <div class=\"btn-group toggle\">\n        <button class=\"btn btn-default top-toggle_85 revenue active\">Revenue</button>\n        <button class=\"btn btn-default top-toggle_85 cmp\">CPM</button>\n      </div>\n      <a class=\"icon action reports pull-right\" href=\"/#/reports?type=sites&order=REVENUE&start_date='2017-02-21 00:00:00'&end_date='2017-02-22 00:00:00'\"> </a>\n    </div>\n  </div>\n\n  <div class=\"snapshot-widget-placement\">\n    <table class=\"snapshot-table-view\">\n      <tr class=\"top-bider_85\">\n        <td><span class=\"icon icon-website\"></span></td>\n        <td>\n          <div class=\"title\"></div>\n          <a class=\"details\">See details</a>\n        </td>\n        <td class=\"value\">\n          <span class=\"revenue\"></span>\n          <span class=\"cmp\" style=\"display: none;\"></span>\n        </td>\n      </tr>\n      <tr class=\"top-bider_85\">\n        <td><span class=\"icon icon-website\"></span></td>\n        <td>\n          <div class=\"title\"></div>\n          <a class=\"details\">See details</a>\n        </td>\n        <td class=\"value\">\n          <span class=\"revenue\"></span>\n          <span class=\"cmp\" style=\"display: none;\"></span>\n        </td>\n      </tr>\n      <tr class=\"top-bider_85\">\n        <td><span class=\"icon icon-website\"></span></td>\n        <td>\n          <div class=\"title\"></div>\n          <a class=\"details\">See details</a>\n        </td>\n        <td class=\"value\">\n          <span class=\"revenue\"></span>\n          <span class=\"cmp\" style=\"display: none;\"></span>\n        </td>\n      </tr>\n      <tr class=\"top-bider_85\">\n        <td><span class=\"icon icon-website\"></span></td>\n        <td>\n          <div class=\"title\"></div>\n          <a class=\"details\">See details</a>\n        </td>\n        <td class=\"value\">\n          <span class=\"revenue\"></span>\n          <span class=\"cmp\" style=\"display: none;\"></span>\n        </td>\n      </tr>\n      <tr class=\"top-bider_85\">\n        <td><span class=\"icon icon-website\"></span></td>\n        <td>\n          <div class=\"title\"></div>\n          <a class=\"details\">See details</a>\n        </td>\n        <td class=\"value\">\n          <span class=\"revenue\"></span>\n          <span class=\"cmp\" style=\"display: none;\"></span>\n        </td>\n      </tr>\n    </table>\n  </div>\n</div>\n\n<pre id=\"csv_85\" style=\"display:none\">37443,AndroidAuthority,39.91129,0.3720569207\n88673,LouderWithCrowder,39.44346,1.3721850757\n82903,ClashDaily,19.82826,0.7873043478\n88201,TheTab,10.36733,0.1992682646\n82935,NextShark,8.47737,0.2825130803</pre>\n<script>\n  $(function () {\n    var numberFormatter = {\n      currency: function(n) {\n        var numberParts = n.toFixed(2).split(\".\");\n        numberParts[0] = numberParts[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n        return \"$\" + numberParts[0] + \".\" + numberParts[1];\n      },\n\n      bigNumber: function(n) {\n        return n.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n      },\n\n      float: function(n) {\n        return n.toFixed(2);\n      },\n\n      percentage: function(n) {\n        return (n * 100).toFixed(2) + \"%\";\n      }\n    };\n    var formater = numberFormatter.currency;\n    var parseCSV = function(csv){\n      lines = csv.split(\"\\n\");\n      objects = _.map(lines, function(line){\n        data = line.split(\",\");\n        var object  = {};\n        object.id   = data[0];\n        object.name = data[1];\n        object.revenue = parseFloat(data[2]);\n        object.cmp = parseFloat(data[3]);\n        return object;\n      });\n      return objects;\n    }\n    \n    var objects = parseCSV(document.getElementById(\"csv_85\").innerHTML);\n    var containers = $(\".top-bider_85\");\n    var i = 0;\n    _.each(containers, function(item){\n      if(objects[i]){\n      $(item).find(\".title\").html(objects[i].name);\n      $(item).find(\".details\").attr(\"href\", \"#/site/\" + objects[i].id);\n      $(item).find(\".value .revenue\").html(formater(objects[i].revenue));\n      $(item).find(\".value .cmp\").html(formater(objects[i].cmp));\n      }else{\n         $(item).find(\".title\").html(\"(Empty)\");\n      }\n      i++;\n    });\n    $(\".top-toggle_85\").click(function(e){\n      if(!$(e.target).hasClass(\"active\")){\n        $(\".top-toggle_85\").toggleClass(\"active\");\n        $(\".top-bider_85 > .value span\").toggle();\n      }\n    });\n  });\n",
        "type": "static_html",
        "chart_options": null,
        "chart_theme": null,
        "title": "Top Websites",
        "number_format": "currency",
        "duration": "{\"hours\": 1}",
        "data_source_type": "sql",
        "data_source": "dw_01",
        "cache_id": null,
        "template_id": null,
        "theme_id": null,
        "theme": null,
        "template": null
    }, {
        "id": 86,
        "dashboard_id": 6,
        "size_x": 2,
        "size_y": 2,
        "row": 1,
        "col": 2,
        "code": "\n<div style=\"background: white\">\n  <div class=\"snapshot-widget-header\">\n    <div class=\"widget-title\">\nTop Placements\n      <div class=\"btn-group toggle\">\n        <button class=\"btn btn-default top-toggle_86 revenue active\">Revenue</button>\n        <button class=\"btn btn-default top-toggle_86 cmp\">CPM</button>\n      </div>\n      <a class=\"icon action reports pull-right\" href=\"/#/reports?type=placements&order=REVENUE&start_date='2017-02-21 00:00:00'&end_date='2017-02-22 00:00:00'\"> </a>\n    </div>\n  </div>\n\n  <div class=\"snapshot-widget-placement\">\n    <table class=\"snapshot-table-view\">\n      <tr class=\"top-bider_86\">\n        <td><span class=\"icon icon-placement\"></span></td>\n        <td>\n          <div class=\"title\"></div>\n          <a class=\"details\">See details</a>\n        </td>\n        <td class=\"value\">\n          <span class=\"revenue\"></span>\n          <span class=\"cmp\" style=\"display: none;\"></span>\n        </td>\n      </tr>\n      <tr class=\"top-bider_86\">\n        <td><span class=\"icon icon-placement\"></span></td>\n        <td>\n          <div class=\"title\"></div>\n          <a class=\"details\">See details</a>\n        </td>\n        <td class=\"value\">\n          <span class=\"revenue\"></span>\n          <span class=\"cmp\" style=\"display: none;\"></span>\n        </td>\n      </tr>\n      <tr class=\"top-bider_86\">\n        <td><span class=\"icon icon-placement\"></span></td>\n        <td>\n          <div class=\"title\"></div>\n          <a class=\"details\">See details</a>\n        </td>\n        <td class=\"value\">\n          <span class=\"revenue\"></span>\n          <span class=\"cmp\" style=\"display: none;\"></span>\n        </td>\n      </tr>\n      <tr class=\"top-bider_86\">\n        <td><span class=\"icon icon-placement\"></span></td>\n        <td>\n          <div class=\"title\"></div>\n          <a class=\"details\">See details</a>\n        </td>\n        <td class=\"value\">\n          <span class=\"revenue\"></span>\n          <span class=\"cmp\" style=\"display: none;\"></span>\n        </td>\n      </tr>\n      <tr class=\"top-bider_86\">\n        <td><span class=\"icon icon-placement\"></span></td>\n        <td>\n          <div class=\"title\"></div>\n          <a class=\"details\">See details</a>\n        </td>\n        <td class=\"value\">\n          <span class=\"revenue\"></span>\n          <span class=\"cmp\" style=\"display: none;\"></span>\n        </td>\n      </tr>\n    </table>\n  </div>\n</div>\n\n<pre id=\"csv_86\" style=\"display:none\">56147,0141-louderwithcrowder.com-technorati-mob-box-ad-a-us,9.46306,1.783464003\n56149,0141-louderwithcrowder.com-technorati-mob-box-ad-b-us,8.99807,1.9063707627\n56145,0141-louderwithcrowder.com-technorati-mob-banner-ad-a-us,7.82943,1.0123390225\n43177,AndroidAuthority_US_Mobile_A,7.7189,0.7685850841\n68137,0039-clashdaily.com-technorati-dsk-box-ad-a-us,5.57975,1.5452090834</pre>\n<script>\n  $(function () {\n   var numberFormatter = {\n      currency: function(n) {\n        var numberParts = n.toFixed(2).split(\".\");\n        numberParts[0] = numberParts[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n        return \"$\" + numberParts[0] + \".\" + numberParts[1];\n      },\n\n      bigNumber: function(n) {\n        return n.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n      },\n\n      float: function(n) {\n        return n.toFixed(2);\n      },\n\n      percentage: function(n) {\n        return (n * 100).toFixed(2) + \"%\";\n      }\n    };\n    var formater = numberFormatter.currency;\n    var parseCSV = function(csv){\n      lines = csv.split(\"\\n\");\n      objects = _.map(lines, function(line){\n        data = line.split(\",\");\n        var object  = {};\n        object.id   = data[0];\n        object.name = data[1];\n        object.revenue = parseFloat(data[2]);\n        object.cmp = parseFloat(data[3]);\n        return object;\n      });\n      return objects;\n    }\n    \n    var objects = parseCSV(document.getElementById(\"csv_86\").innerHTML);\n    var containers = $(\".top-bider_86\");\n    var i = 0;\n    _.each(containers, function(item){\n      $(item).find(\".title\").html(objects[i].name);\n      $(item).find(\".details\").attr(\"href\", \"#/placement/\" + objects[i].id);\n      $(item).find(\".value .revenue\").html(formater(objects[i].revenue));\n      $(item).find(\".value .cmp\").html(formater(objects[i].cmp));\n      i++;\n    });\n    $(\".top-toggle_86\").click(function(e){\n      if(!$(e.target).hasClass(\"active\")){\n        $(\".top-toggle_86\").toggleClass(\"active\");\n        $(\".top-bider_86 > .value span\").toggle();\n      }\n    });\n  });\n",
        "type": "static_html",
        "chart_options": null,
        "chart_theme": null,
        "title": "Top Placements",
        "number_format": "currency",
        "duration": "{\"hours\": 1}",
        "data_source_type": "sql",
        "data_source": "dw_01",
        "cache_id": null,
        "template_id": null,
        "theme_id": null,
        "theme": null,
        "template": null
    }]
}